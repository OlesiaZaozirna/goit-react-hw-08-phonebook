{"version":3,"file":"static/js/62.8ab6c636.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/MyContacts/MyContacts.module.css?73b2","components/MyContacts/MyContacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from 'reselect';\n\nexport const selectContacts = store => store.contacts;\nexport const selectFilter = store => store.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts.items;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"title\":\"ContactForm_title__jZguf\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from \"../../redux/contacts/contacts-selectors\";\n\nimport css from \"./ContactForm.module.css\"\n\nimport {addContact} from '../../redux/contacts/contacts-operation';\n\nconst ContactForm = () => {\n const [formData, setFormData] = useState ({\n    name: '',\n    number: '',\n });\n  const contacts = useSelector(selectFilteredContacts);\n \n  const dispatch = useDispatch();\n\n \n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    //перевірка на дублювання номера\n    const isUnique = !contacts.some(contact => contact.name === formData.name);\n    if (!isUnique) {\n      alert('This contact already exists');\n      return;\n    }\n  \n    if (!validateName(formData.name)) {\n      alert('Please enter a valid name');\n      return;\n    }\n\n    if (!validateNumber(formData.number)) {\n      alert('Please enter a valid phone number');\n      return;\n    }\n      \n    dispatch(addContact(formData));\n\n    setFormData({ name: '', number: '' });\n  };\n  \n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({ ...prevData, [name]: value }));\n     };\n  \n  const validateName = name => /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/.test(name);\n\n  const validateNumber = number =>\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/.test(number);\n\n      return (\n        <div className={css.container}>\n          <form className={css.form} onSubmit={handleSubmit}>\n        <h2 className={css.title}>Phonebook</h2>\n            <label className={css.label} htmlFor=\"name\">Name</label>\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Contact name\"\n          name=\"name\"\n          id=\"name\"\n          required\n          value={formData.name}\n          onChange={handleChange}\n        />\n\n        <label className={css.label} htmlFor=\"number\">Number</label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          placeholder=\"Phone number\"\n          name=\"number\"\n          id=\"number\"\n          required\n          value={formData.number}\n          onChange={handleChange}\n        />\n\n        <button className={css.button} type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"Filter\":\"Filter_Filter__Gzk39\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport css from \"./Filter.module.css\"\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector((state) => state.filter);\n\n  const handleChange = (e) => {\n    const inputValue = e.target.value;\n\n    if (!validateName(inputValue)) {\n      alert('Please enter a valid name for filtering');\n      return;\n    }\n dispatch(setFilter(inputValue));\n  };\n\n  const handleBackspace = (e) => {\n    if (e.key === 'Backspace' && filter.length > 0) {\n      const updatedFilter = filter.slice(0, -1);\n      dispatch(setFilter(updatedFilter));\n    }\n  };\n\n  const validateName = name => /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/.test(name);\n\n  return (\n    <div className={css.Filter}>\n      <label htmlFor=\"filter\">Find contact by name</label>\n      <input className={css.Input}\n        type=\"text\"\n        placeholder=\"search...\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        onKeyDown={handleBackspace}\n      />\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"ContactListContainer\":\"ContactList_ContactListContainer__LYZhn\",\"Description\":\"ContactList_Description__-A2aY\",\"ContactListItem\":\"ContactList_ContactListItem__OjuuN\",\"Delete\":\"ContactList_Delete__3q91o\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectFilteredContacts } from \"../../redux/contacts/contacts-selectors\";\nimport css from \"./ContactList.module.css\";\nimport { deleteContact, fetchContacts, } from '../../redux/contacts/contacts-operation';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n  if (!contacts) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <ul className={css.ContactListContainer}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={css.ContactListItem} key={id}>\n          <p className={css.Description}>\n            {name}: {number}\n          </p>\n          <button className={css.Delete} onClick={() => dispatch(deleteContact(id))}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"MyContactsContainer\":\"MyContacts_MyContactsContainer__2dBfM\"};","import ContactForm from \"../../components/ContactForm/ContactForm\";\nimport { Filter } from \"../../components/Filter/Filter\";\nimport ContactList from \"../../components/ContactList/ContactList\";\nimport css from \"./MyContacts.module.css\";\n\n\nexport const MyContacts = () => {\n    return (\n      <div className={css.MyContactsContainer}>\n        <div className={css.FormContainer}>\n          <ContactForm />\n        </div>\n        <div className={css.ContactListContainer}>\n          <Filter name=\"filter\"/>\n          <ContactList/>\n        </div>\n      </div>\n    );\n}","import { MyContacts } from \"../../components/MyContacts/MyContacts\";\n\nconst ContactsPage = () => {\n    return (\n    <>\n    <MyContacts/>\n    </>\n    )\n}\nexport default ContactsPage;"],"names":["selectFilteredContacts","createSelector","store","contacts","filter","items","normalizedFilter","toLowerCase","contact","name","includes","_useState","useState","number","_useState2","_slicedToArray","formData","setFormData","useSelector","dispatch","useDispatch","handleChange","e","_e$target","target","value","prevData","_objectSpread","_defineProperty","validateName","test","validateNumber","_jsx","className","css","children","_jsxs","onSubmit","preventDefault","some","alert","addContact","htmlFor","type","placeholder","id","required","onChange","Filter","state","inputValue","setFilter","onKeyDown","key","length","updatedFilter","slice","useEffect","fetchContacts","map","_ref","onClick","deleteContact","MyContacts","ContactForm","ContactList","_Fragment"],"sourceRoot":""}